/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.medicus.common.service.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.medicus.common.service.model.Student_Externship;
import com.medicus.common.service.model.Student_ExternshipModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Student_Externship service. Represents a row in the &quot;Medicus_Student_Externship&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link Student_ExternshipModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Student_ExternshipImpl}.
 * </p>
 *
 * @author sandip.patel
 * @see Student_ExternshipImpl
 * @see Student_Externship
 * @see Student_ExternshipModel
 * @generated
 */
@ProviderType
public class Student_ExternshipModelImpl extends BaseModelImpl<Student_Externship>
	implements Student_ExternshipModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a student_ externship model instance should use the {@link Student_Externship} interface instead.
	 */
	public static final String TABLE_NAME = "Medicus_Student_Externship";
	public static final Object[][] TABLE_COLUMNS = {
			{ "studentExternshipId", Types.BIGINT },
			{ "studentId", Types.BIGINT },
			{ "partnerId", Types.BIGINT },
			{ "employerId", Types.BIGINT },
			{ "startDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP },
			{ "noOfHoursPerWeek", Types.INTEGER },
			{ "midPointReview", Types.TIMESTAMP },
			{ "midPointReviewComment", Types.VARCHAR },
			{ "finalReview", Types.TIMESTAMP },
			{ "finalReviewComment", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "createdBy", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("studentExternshipId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("studentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("partnerId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employerId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("startDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("endDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("noOfHoursPerWeek", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("midPointReview", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("midPointReviewComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("finalReview", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("finalReviewComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table Medicus_Student_Externship (studentExternshipId LONG not null primary key,studentId LONG,partnerId LONG,employerId LONG,startDate DATE null,endDate DATE null,noOfHoursPerWeek INTEGER,midPointReview DATE null,midPointReviewComment VARCHAR(200) null,finalReview DATE null,finalReviewComment VARCHAR(200) null,createDate DATE null,createdBy LONG,modifiedDate DATE null,modifiedBy LONG)";
	public static final String TABLE_SQL_DROP = "drop table Medicus_Student_Externship";
	public static final String ORDER_BY_JPQL = " ORDER BY student_Externship.studentExternshipId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Medicus_Student_Externship.studentExternshipId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.medicus.common.service.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.medicus.common.service.model.Student_Externship"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.medicus.common.service.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.medicus.common.service.model.Student_Externship"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.medicus.common.service.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.medicus.common.service.model.Student_Externship"),
			true);
	public static final long STUDENTID_COLUMN_BITMASK = 1L;
	public static final long STUDENTEXTERNSHIPID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.medicus.common.service.service.util.PropsUtil.get(
				"lock.expiration.time.com.medicus.common.service.model.Student_Externship"));

	public Student_ExternshipModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _studentExternshipId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setStudentExternshipId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _studentExternshipId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Student_Externship.class;
	}

	@Override
	public String getModelClassName() {
		return Student_Externship.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("studentExternshipId", getStudentExternshipId());
		attributes.put("studentId", getStudentId());
		attributes.put("partnerId", getPartnerId());
		attributes.put("employerId", getEmployerId());
		attributes.put("startDate", getStartDate());
		attributes.put("endDate", getEndDate());
		attributes.put("noOfHoursPerWeek", getNoOfHoursPerWeek());
		attributes.put("midPointReview", getMidPointReview());
		attributes.put("midPointReviewComment", getMidPointReviewComment());
		attributes.put("finalReview", getFinalReview());
		attributes.put("finalReviewComment", getFinalReviewComment());
		attributes.put("createDate", getCreateDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("modifiedBy", getModifiedBy());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long studentExternshipId = (Long)attributes.get("studentExternshipId");

		if (studentExternshipId != null) {
			setStudentExternshipId(studentExternshipId);
		}

		Long studentId = (Long)attributes.get("studentId");

		if (studentId != null) {
			setStudentId(studentId);
		}

		Long partnerId = (Long)attributes.get("partnerId");

		if (partnerId != null) {
			setPartnerId(partnerId);
		}

		Long employerId = (Long)attributes.get("employerId");

		if (employerId != null) {
			setEmployerId(employerId);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		Integer noOfHoursPerWeek = (Integer)attributes.get("noOfHoursPerWeek");

		if (noOfHoursPerWeek != null) {
			setNoOfHoursPerWeek(noOfHoursPerWeek);
		}

		Date midPointReview = (Date)attributes.get("midPointReview");

		if (midPointReview != null) {
			setMidPointReview(midPointReview);
		}

		String midPointReviewComment = (String)attributes.get(
				"midPointReviewComment");

		if (midPointReviewComment != null) {
			setMidPointReviewComment(midPointReviewComment);
		}

		Date finalReview = (Date)attributes.get("finalReview");

		if (finalReview != null) {
			setFinalReview(finalReview);
		}

		String finalReviewComment = (String)attributes.get("finalReviewComment");

		if (finalReviewComment != null) {
			setFinalReviewComment(finalReviewComment);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}
	}

	@Override
	public long getStudentExternshipId() {
		return _studentExternshipId;
	}

	@Override
	public void setStudentExternshipId(long studentExternshipId) {
		_studentExternshipId = studentExternshipId;
	}

	@Override
	public long getStudentId() {
		return _studentId;
	}

	@Override
	public void setStudentId(long studentId) {
		_columnBitmask |= STUDENTID_COLUMN_BITMASK;

		if (!_setOriginalStudentId) {
			_setOriginalStudentId = true;

			_originalStudentId = _studentId;
		}

		_studentId = studentId;
	}

	public long getOriginalStudentId() {
		return _originalStudentId;
	}

	@Override
	public long getPartnerId() {
		return _partnerId;
	}

	@Override
	public void setPartnerId(long partnerId) {
		_partnerId = partnerId;
	}

	@Override
	public long getEmployerId() {
		return _employerId;
	}

	@Override
	public void setEmployerId(long employerId) {
		_employerId = employerId;
	}

	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@Override
	public int getNoOfHoursPerWeek() {
		return _noOfHoursPerWeek;
	}

	@Override
	public void setNoOfHoursPerWeek(int noOfHoursPerWeek) {
		_noOfHoursPerWeek = noOfHoursPerWeek;
	}

	@Override
	public Date getMidPointReview() {
		return _midPointReview;
	}

	@Override
	public void setMidPointReview(Date midPointReview) {
		_midPointReview = midPointReview;
	}

	@Override
	public String getMidPointReviewComment() {
		if (_midPointReviewComment == null) {
			return StringPool.BLANK;
		}
		else {
			return _midPointReviewComment;
		}
	}

	@Override
	public void setMidPointReviewComment(String midPointReviewComment) {
		_midPointReviewComment = midPointReviewComment;
	}

	@Override
	public Date getFinalReview() {
		return _finalReview;
	}

	@Override
	public void setFinalReview(Date finalReview) {
		_finalReview = finalReview;
	}

	@Override
	public String getFinalReviewComment() {
		if (_finalReviewComment == null) {
			return StringPool.BLANK;
		}
		else {
			return _finalReviewComment;
		}
	}

	@Override
	public void setFinalReviewComment(String finalReviewComment) {
		_finalReviewComment = finalReviewComment;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Student_Externship.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Student_Externship toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Student_Externship)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		Student_ExternshipImpl student_ExternshipImpl = new Student_ExternshipImpl();

		student_ExternshipImpl.setStudentExternshipId(getStudentExternshipId());
		student_ExternshipImpl.setStudentId(getStudentId());
		student_ExternshipImpl.setPartnerId(getPartnerId());
		student_ExternshipImpl.setEmployerId(getEmployerId());
		student_ExternshipImpl.setStartDate(getStartDate());
		student_ExternshipImpl.setEndDate(getEndDate());
		student_ExternshipImpl.setNoOfHoursPerWeek(getNoOfHoursPerWeek());
		student_ExternshipImpl.setMidPointReview(getMidPointReview());
		student_ExternshipImpl.setMidPointReviewComment(getMidPointReviewComment());
		student_ExternshipImpl.setFinalReview(getFinalReview());
		student_ExternshipImpl.setFinalReviewComment(getFinalReviewComment());
		student_ExternshipImpl.setCreateDate(getCreateDate());
		student_ExternshipImpl.setCreatedBy(getCreatedBy());
		student_ExternshipImpl.setModifiedDate(getModifiedDate());
		student_ExternshipImpl.setModifiedBy(getModifiedBy());

		student_ExternshipImpl.resetOriginalValues();

		return student_ExternshipImpl;
	}

	@Override
	public int compareTo(Student_Externship student_Externship) {
		long primaryKey = student_Externship.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Student_Externship)) {
			return false;
		}

		Student_Externship student_Externship = (Student_Externship)obj;

		long primaryKey = student_Externship.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		Student_ExternshipModelImpl student_ExternshipModelImpl = this;

		student_ExternshipModelImpl._originalStudentId = student_ExternshipModelImpl._studentId;

		student_ExternshipModelImpl._setOriginalStudentId = false;

		student_ExternshipModelImpl._setModifiedDate = false;

		student_ExternshipModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Student_Externship> toCacheModel() {
		Student_ExternshipCacheModel student_ExternshipCacheModel = new Student_ExternshipCacheModel();

		student_ExternshipCacheModel.studentExternshipId = getStudentExternshipId();

		student_ExternshipCacheModel.studentId = getStudentId();

		student_ExternshipCacheModel.partnerId = getPartnerId();

		student_ExternshipCacheModel.employerId = getEmployerId();

		Date startDate = getStartDate();

		if (startDate != null) {
			student_ExternshipCacheModel.startDate = startDate.getTime();
		}
		else {
			student_ExternshipCacheModel.startDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			student_ExternshipCacheModel.endDate = endDate.getTime();
		}
		else {
			student_ExternshipCacheModel.endDate = Long.MIN_VALUE;
		}

		student_ExternshipCacheModel.noOfHoursPerWeek = getNoOfHoursPerWeek();

		Date midPointReview = getMidPointReview();

		if (midPointReview != null) {
			student_ExternshipCacheModel.midPointReview = midPointReview.getTime();
		}
		else {
			student_ExternshipCacheModel.midPointReview = Long.MIN_VALUE;
		}

		student_ExternshipCacheModel.midPointReviewComment = getMidPointReviewComment();

		String midPointReviewComment = student_ExternshipCacheModel.midPointReviewComment;

		if ((midPointReviewComment != null) &&
				(midPointReviewComment.length() == 0)) {
			student_ExternshipCacheModel.midPointReviewComment = null;
		}

		Date finalReview = getFinalReview();

		if (finalReview != null) {
			student_ExternshipCacheModel.finalReview = finalReview.getTime();
		}
		else {
			student_ExternshipCacheModel.finalReview = Long.MIN_VALUE;
		}

		student_ExternshipCacheModel.finalReviewComment = getFinalReviewComment();

		String finalReviewComment = student_ExternshipCacheModel.finalReviewComment;

		if ((finalReviewComment != null) && (finalReviewComment.length() == 0)) {
			student_ExternshipCacheModel.finalReviewComment = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			student_ExternshipCacheModel.createDate = createDate.getTime();
		}
		else {
			student_ExternshipCacheModel.createDate = Long.MIN_VALUE;
		}

		student_ExternshipCacheModel.createdBy = getCreatedBy();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			student_ExternshipCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			student_ExternshipCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		student_ExternshipCacheModel.modifiedBy = getModifiedBy();

		return student_ExternshipCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{studentExternshipId=");
		sb.append(getStudentExternshipId());
		sb.append(", studentId=");
		sb.append(getStudentId());
		sb.append(", partnerId=");
		sb.append(getPartnerId());
		sb.append(", employerId=");
		sb.append(getEmployerId());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", noOfHoursPerWeek=");
		sb.append(getNoOfHoursPerWeek());
		sb.append(", midPointReview=");
		sb.append(getMidPointReview());
		sb.append(", midPointReviewComment=");
		sb.append(getMidPointReviewComment());
		sb.append(", finalReview=");
		sb.append(getFinalReview());
		sb.append(", finalReviewComment=");
		sb.append(getFinalReviewComment());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("com.medicus.common.service.model.Student_Externship");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>studentExternshipId</column-name><column-value><![CDATA[");
		sb.append(getStudentExternshipId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>studentId</column-name><column-value><![CDATA[");
		sb.append(getStudentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>partnerId</column-name><column-value><![CDATA[");
		sb.append(getPartnerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employerId</column-name><column-value><![CDATA[");
		sb.append(getEmployerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>noOfHoursPerWeek</column-name><column-value><![CDATA[");
		sb.append(getNoOfHoursPerWeek());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>midPointReview</column-name><column-value><![CDATA[");
		sb.append(getMidPointReview());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>midPointReviewComment</column-name><column-value><![CDATA[");
		sb.append(getMidPointReviewComment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>finalReview</column-name><column-value><![CDATA[");
		sb.append(getFinalReview());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>finalReviewComment</column-name><column-value><![CDATA[");
		sb.append(getFinalReviewComment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Student_Externship.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Student_Externship.class
		};
	private long _studentExternshipId;
	private long _studentId;
	private long _originalStudentId;
	private boolean _setOriginalStudentId;
	private long _partnerId;
	private long _employerId;
	private Date _startDate;
	private Date _endDate;
	private int _noOfHoursPerWeek;
	private Date _midPointReview;
	private String _midPointReviewComment;
	private Date _finalReview;
	private String _finalReviewComment;
	private Date _createDate;
	private long _createdBy;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _modifiedBy;
	private long _columnBitmask;
	private Student_Externship _escapedModel;
}